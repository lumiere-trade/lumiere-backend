"""
Chevalier service event schemas.

Events published by Chevalier during live trading.
"""

from typing import Any, Dict, Literal

from pydantic import Field

from courier.domain.events.base import BaseEvent


class StrategyDeployedEvent(BaseEvent):
    """
    Strategy deployed for live trading.
    """

    type: Literal["strategy.deployed"] = "strategy.deployed"
    data: Dict[str, Any] = Field(
        ...,
        description="Deployment details",
        example={
            "strategy_id": "strat_xyz",
            "user_id": "user_123",
            "name": "RSI Momentum",
            "initial_capital": 1000.0,
            "token_pair": "SOL/USDC",
            "status": "active",
        },
    )


class TradeSignalGeneratedEvent(BaseEvent):
    """
    Trading signal generated by strategy.
    """

    type: Literal["trade.signal_generated"] = "trade.signal_generated"
    data: Dict[str, Any] = Field(
        ...,
        description="Signal details",
        example={
            "strategy_id": "strat_xyz",
            "user_id": "user_123",
            "signal_id": "sig_abc",
            "token": "SOL",
            "direction": "buy",
            "confidence": 0.85,
            "reason": "RSI oversold + volume spike",
            "price_at_signal": 145.67,
        },
    )


class TradeOrderPlacedEvent(BaseEvent):
    """
    Order placed on DEX.
    """

    type: Literal["trade.order_placed"] = "trade.order_placed"
    data: Dict[str, Any] = Field(
        ...,
        description="Order details",
        example={
            "strategy_id": "strat_xyz",
            "user_id": "user_123",
            "order_id": "ord_123",
            "token": "SOL",
            "direction": "buy",
            "order_type": "limit",
            "price": 145.50,
            "amount": 10.0,
            "tx_signature": "5Kq...",
        },
    )


class TradeOrderFilledEvent(BaseEvent):
    """
    Order filled successfully.
    """

    type: Literal["trade.order_filled"] = "trade.order_filled"
    data: Dict[str, Any] = Field(
        ...,
        description="Fill details",
        example={
            "strategy_id": "strat_xyz",
            "user_id": "user_123",
            "order_id": "ord_123",
            "token": "SOL",
            "direction": "buy",
            "fill_price": 145.55,
            "fill_amount": 10.0,
            "total_value": 1455.50,
            "fees": 1.46,
            "tx_signature": "5Kq...",
        },
    )


class PositionClosedEvent(BaseEvent):
    """
    Trading position closed.
    """

    type: Literal["position.closed"] = "position.closed"
    data: Dict[str, Any] = Field(
        ...,
        description="Position closure details",
        example={
            "strategy_id": "strat_xyz",
            "user_id": "user_123",
            "position_id": "pos_abc",
            "token": "SOL",
            "entry_price": 145.55,
            "exit_price": 152.30,
            "size": 10.0,
            "realized_pnl": 67.50,
            "realized_pnl_percentage": 0.0464,
            "reason": "take_profit",
            "tx_signature": "7Mn...",
        },
    )


# Union type
ChevalierEvent = (
    StrategyDeployedEvent
    | TradeSignalGeneratedEvent
    | TradeOrderPlacedEvent
    | TradeOrderFilledEvent
    | PositionClosedEvent
)
